{"version":3,"sources":["styles/assets/svgs/more.svg","styles/assets/svgs/lightbulb.svg","cmps/Header.jsx","cmps/InsightPreview.jsx","cmps/InsightList.jsx","services/storageService.js","services/insightService.js","cmps/Home.jsx","cmps/InsightPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","activeClassName","to","exact","InsightPreview","props","history","useHistory","text","useRef","insight","data","useState","editDisabled","setEditing","isMenuOpen","setMenu","handleMenuClose","onPressInsight","push","_id","onClick","idx","html","current","disabled","onChange","evt","target","value","editedInsight","onEdit","statistics","publishedContributorsCount","publishedContributionsPercent","StyledButton","aria-controls","aria-haspopup","event","currentTarget","alt","src","MoreIcon","Menu","id","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","insightId","onDelete","withStyles","root","background","height","minWidth","label","textTransform","Button","InsightList","insights","map","key","store","localStorage","JSON","stringify","load","defaultValue","parse","processDB","status","gProcess","query","storageService","console","log","Promise","resolve","save","findIndex","_insight","splice","remove","get","find","Home","state","process","loadProcess","insightService","then","setState","catch","err","res","savedInsight","this","lightbulbIcon","Component","InsightPage","useParams","currInsight","setInsight","useEffect","fontSize","App","path","component","window","location","hostname","match","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2a0c9dff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/more.7a2a1950.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightbulb.5fc99d6a.svg\";","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  return <div className=\"header flex column\">\r\n    <div className=\"header-title flex justify-center\"> לגבש אסטרטגיה</div>\r\n    <nav className=\"flex justify-center\">\r\n      <div className=\"flex space-around\">\r\n        <a>רקע</a>\r\n        <a>תשובות</a>\r\n        <NavLink activeClassName=\"activeNav\" to=\"/\" exact>תובנות</NavLink>\r\n        <a>החלטות</a>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n}","import React, { useRef, useState } from \"react\";\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreIcon from '../styles/assets/svgs/more.svg';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport function InsightPreview(props) {\r\n    const history = useHistory();\r\n    const text = useRef(props.insight.data);\r\n    const [editDisabled, setEditing] = useState(true);\r\n    const [isMenuOpen, setMenu] = useState(null);\r\n\r\n    const onPressSaved = () => {\r\n        var editedInsight = props.insight\r\n        editedInsight.data = text.current\r\n        props.onEdit(editedInsight)\r\n        setEditing(true)\r\n    }\r\n    const onPressDelete = () => {\r\n        var insightId = props.insight._id\r\n        props.onDelete(insightId);\r\n        handleMenuClose();\r\n    }\r\n\r\n    const handleChange = evt => {\r\n        text.current = evt.target.value;\r\n    };\r\n    const onPressEdit = () => {\r\n        setEditing(false)\r\n        handleMenuClose();\r\n    }\r\n    const onPressCancelled = () => {\r\n        text.current = props.insight.data\r\n        setEditing(true)\r\n    }\r\n    const handleMenuOpen = (event) => {\r\n        setMenu(event.currentTarget)\r\n    }\r\n    const handleMenuClose = () => {\r\n        setMenu(null)\r\n    }\r\n    const onPressInsight = () => {\r\n        if (editDisabled) {\r\n            history.push(`/insight/${props.insight._id}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"insight-card flex\">\r\n            <div className=\"insight-index\" onClick={onPressInsight}>{props.idx}</div>\r\n            <div className=\"insight-content\">\r\n                <ContentEditable className={editDisabled ? '' : 'edit-mode'} onClick={onPressInsight} html={text.current} disabled={editDisabled} onChange={handleChange} />\r\n                {!editDisabled &&\r\n                    <div className=\"edit-actions flex\">\r\n                        <button onClick={onPressSaved} className=\"save-button\">שמירה</button>\r\n                        <button onClick={onPressCancelled} className=\"cancel-button\">ביטול</button></div>}\r\n                {editDisabled && <div className=\"insight-stats\">{props.insight.statistics.publishedContributorsCount} משתתפים תומכים בתובנה זו ({props.insight.statistics.publishedContributionsPercent}% מהתשובות) </div>}\r\n            </div>\r\n            <StyledButton className=\"more-button\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleMenuOpen} >\r\n                <img className=\"more-icon\" alt=\"path\" src={MoreIcon}></img>\r\n            </StyledButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={isMenuOpen}\r\n                keepMounted\r\n                open={Boolean(isMenuOpen)}\r\n                onClose={handleMenuClose}\r\n            >\r\n                <MenuItem onClick={onPressEdit}><EditIcon></EditIcon>ערוך תובנה</MenuItem>\r\n                <MenuItem onClick={onPressDelete}><DeleteIcon></DeleteIcon>מחק תובנה</MenuItem>\r\n            </Menu>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        background: 'none',\r\n        height: 30,\r\n        minWidth: 30,\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);","import React from 'react'\r\nimport { InsightPreview } from '../cmps/InsightPreview.jsx';\r\n\r\nexport function InsightList(props) {\r\n    return (\r\n        <div className=\"insights\">\r\n            {props.insights.map((insight, idx) =>\r\n                <InsightPreview insight={insight} idx={idx + 1} key={idx} onDelete={props.onDelete} onEdit={props.onEdit} />\r\n            )}\r\n        </div>\r\n    )\r\n}","function store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key];\r\n    if (!value) return defaultValue\r\n    else return JSON.parse(value);\r\n}\r\n\r\nexport default {\r\n    store,\r\n    load\r\n}","import storageService from './storageService.js'\r\n\r\nvar processDB =\r\n{\r\n    _id: 1,\r\n    status: 'inProcess',\r\n    insights: [{\r\n        _id: 1,\r\n        data: 'במאורה באדמה גר לו הוביט. לא מאורה מגעילה, מרופשת וטחובה, מלאה שלשולים מתחפרים וריח בוץ, וגם לא מאורה יבשה, חשופית וחולית שאין בה מקום לשבת או דבר לאכול: זאת היתה מאורת? הוביט, ומשמעות הדבר נוחות.',\r\n        statistics: {\r\n            publishedContributorsCount: 7,\r\n            publishedContributionsPercent: 27,\r\n        }\r\n    },\r\n    {\r\n        _id: 2,\r\n        data:\r\n            'היתה לה דלת עגולה דמוית צוהר, צבועה ירוק, ובדיוק במרכז ידית פליז צהובה ונוצצת. הדלת נפתחה אל פרוזדור דמוי מנהרה שצורתו כצינור: מנהרה נעימה מאוד ונטולת עשן, עם קריות מחופים ורצפה מרוצפת מכוסה שטיח, מצוידת בכיסאות ממורקים ובהמוני מתלים לכובעים ומעילים וההוביט היה מכניס אורחים.',\r\n        statistics: {\r\n            publishedContributorsCount: 8,\r\n            publishedContributionsPercent: 33,\r\n        }\r\n    },\r\n    {\r\n        _id: 3,\r\n        data: 'הסיפור החל... ובכן, הסיפור החל כפי שהיית הכי פחות מצפה: במחילה באדמה, שם חי לו הוביט, לא מחילה מלוכלכת, מלאה בתולעים ובריחות רעים. היה זה ביתו של הוביט, ומשמעות הדבר, אוכל טוב, אח חמימה וכל הנוחיות של בית.',\r\n        statistics: {\r\n            publishedContributorsCount: 9,\r\n            publishedContributionsPercent: 35,\r\n        }\r\n    },\r\n    {\r\n        _id: 4,\r\n        data: 'שמועות החלו להתפשט: הדרקון סמאוג, לא נראה מזה 60 שנה; עיניים מביטות מזרחה אל ההר, מעריכות, תוהות, שוקלות את הסיכון, באם העושר של עמנו שוכן לו בלתי מוגן, האם נשב מאחור בזמן שאחרים תובעים את ששייך לנו, או שנתפוס את ההזדמנות הזו ונכבוש בחזרה את ארבור!',\r\n        statistics: {\r\n            publishedContributorsCount: 10,\r\n            publishedContributionsPercent: 38,\r\n        }\r\n    },\r\n    {\r\n        _id: 5,\r\n        data: 'יהיה עליך להסתדר ללא מטפחת ובלי הרבה מאוד דברים נוספים, בילבו באגינס, לפני תום המסע. אתה נולדת בגבעות הקטנות ובנהרות הקטנים של הפלך, אולם הבית מאחוריך כעת והעולם לרגלייך.',\r\n        statistics: {\r\n            publishedContributorsCount: 11,\r\n            publishedContributionsPercent: 40,\r\n        }\r\n    }\r\n    ]\r\n}\r\n\r\nconst STORAGE_KEY = 'process'\r\nvar gProcess = null;\r\n\r\nexport default {\r\n    query,\r\n    save,\r\n    remove,\r\n    get\r\n}\r\n\r\nfunction query() {\r\n    gProcess = storageService.load(STORAGE_KEY) || processDB;\r\n    console.log(gProcess);\r\n    return Promise.resolve(gProcess);\r\n}\r\n\r\nfunction get(id) {\r\n    const insight = gProcess.insights.find(insight => insight._id === id)\r\n    console.log(insight);\r\n    return Promise.resolve(insight)\r\n}\r\n\r\nfunction remove(id) {\r\n    const idx = gProcess.insights.findIndex(insight => insight._id === id)\r\n    gProcess.insights.splice(idx, 1)\r\n    storageService.store(STORAGE_KEY, gProcess)\r\n    return Promise.resolve()\r\n}\r\n\r\nfunction save(insight) {\r\n    if (insight._id) {\r\n        const idx = gProcess.insights.findIndex(_insight => _insight._id === insight._id)\r\n        gProcess.insights.splice(idx, 1, insight)\r\n        storageService.store(STORAGE_KEY, gProcess)\r\n        return Promise.resolve(gProcess.insights[idx])\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { InsightList } from '../cmps/InsightList.jsx';\r\nimport insightService from '../services/insightService.js'\r\nimport lightbulbIcon from '../styles/assets/svgs/lightbulb.svg';\r\nexport default class Home extends Component {\r\n    state = {\r\n        process: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadProcess()\r\n    }\r\n    loadProcess = () => {\r\n        insightService.query()\r\n            .then(process => {\r\n                this.setState({ process })\r\n            })\r\n            .catch(err => {\r\n                console.log('error: ', err);\r\n            })\r\n    }\r\n    onDelete = (insightId) => {\r\n        insightService.remove(insightId).then(res => {\r\n            this.loadProcess()\r\n        })\r\n            .catch(err => {\r\n                console.log('error: ', err);\r\n            })\r\n    }\r\n    onEdit = (insight) => {\r\n        insightService.save(insight).then(savedInsight => {\r\n            console.log('Insight succesfuly saved:', savedInsight);\r\n        })\r\n            .catch(err => {\r\n                console.log('error: ', err);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { process } = this.state\r\n        return (\r\n            <div className=\"home-page\">\r\n                <div className=\"process flex align-center\">\r\n                    <img alt=\"path\" src={lightbulbIcon}></img>\r\n                    {process && process.status === 'inProcess' && <div>התהליך עדיין פתוח לתשובות. המשתתפים יוכלו לראות את התובנות הסופיות רק לאחד שיאושרו על ידי אחד ממנהלי התהליך.</div>}\r\n                </div>\r\n                {process && <InsightList insights={process.insights} onDelete={this.onDelete} onEdit={this.onEdit}></InsightList>}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport insightService from '../services/insightService.js'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nexport function InsightPage() {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [currInsight, setInsight] = useState(null);\r\n\r\n  useEffect(() => {\r\n    insightService.get(+id).then(insight => {\r\n      setInsight(insight)\r\n    })\r\n      .catch(err => {\r\n        console.log('error: ', err);\r\n\r\n      })\r\n  }, [])\r\n\r\n  const onPressBack = () => {\r\n    history.push(``)\r\n  }\r\n\r\n  return (\r\n    <div className=\"insight-page\">\r\n      {currInsight &&\r\n        <div className=\"insight-content flex column align-center\">\r\n          <h1>פרטים על התובנה:</h1>\r\n          <div className=\"insight-data\">\r\n            {currInsight.data}\r\n          </div>\r\n          <div className=\"insight-stats\">{currInsight.statistics.publishedContributorsCount} משתתפים תומכים בתובנה זו ({currInsight.statistics.publishedContributionsPercent}% מהתשובות) </div>\r\n          <div>\r\n            <button onClick={onPressBack}>חזור לעמוד הראשי</button>\r\n            <ArrowBackIcon fontSize=\"small\"></ArrowBackIcon>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport './styles/global.scss'\nimport Header from './cmps/Header'\nimport Home from './cmps/Home'\nimport {InsightPage} from './cmps/InsightPage'\nimport { Route, Switch } from 'react-router-dom';\n\nconst App = () => (\n  <div>\n    <Header />\n    <Switch>\n    <Route path=\"/\" component={Home} exact />\n    <Route path=\"/insight/:id\" component={InsightPage} />\n    </Switch>\n  </div>\n)\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history} >\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}